/* Reset and base styles */
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

:root {
    --primary-gradient: linear-gradient(135deg, #667eea 0%, #764ba2 50%, #6B73FF 100%);
    --glass-bg: rgba(255, 255, 255, 0.12);
    --glass-border: rgba(255, 255, 255, 0.2);
    --hit-color-perfect: #2ecc71; /* Bright Green */
    --hit-color-great: #f1c40f;   /* Yellow */
    --hit-color-good: #3498db;    /* Blue */
    --miss-color: #e74c3c;       /* Red */
    --text-primary: #ffffff;
    --text-secondary: rgba(255, 255, 255, 0.8);
    --shadow-light: 0 4px 8px rgba(0, 0, 0, 0.1);
    --shadow-medium: 0 8px 16px rgba(0, 0, 0, 0.15);
    --shadow-heavy: 0 24px 48px rgba(0, 0, 0, 0.2);
    --key-width-desktop: 55px;
    --black-key-width-desktop: 38px;
    --key-width-mobile: 42px; /* Adjusted for better mobile view */
    --black-key-width-mobile: 28px; /* Adjusted for better mobile view */
}

body {
    font-family: 'Segoe UI', 'Roboto', 'Arial', sans-serif;
    background: var(--primary-gradient);
    min-height: 100vh;
    padding: 20px;
    color: var(--text-primary);
    background-attachment: fixed;
    position: relative;
    overflow-x: hidden;
}

body::before {
    content: '';
    position: fixed;
    top: -50%;
    left: -50%;
    width: 200%;
    height: 200%;
    background: radial-gradient(circle, rgba(255, 255, 255, 0.05) 1px, transparent 1px);
    background-size: 50px 50px;
    animation: backgroundShift 20s linear infinite;
    z-index: -1;
}

@keyframes backgroundShift {
    0% { transform: translate(0, 0); }
    100% { transform: translate(50px, 50px); }
}

.game-container {
    max-width: 1200px;
    margin: 0 auto;
    background: var(--glass-bg);
    border-radius: 24px;
    padding: 32px;
    backdrop-filter: blur(20px);
    box-shadow: var(--shadow-heavy), var(--shadow-medium), inset 0 1px 2px rgba(255, 255, 255, 0.1);
    border: 1px solid var(--glass-border);
    position: relative;
}

.game-title {
    text-align: center;
    margin-bottom: 24px;
    padding-bottom: 20px;
    border-bottom: 2px solid rgba(255, 255, 255, 0.2);
}

.game-title h1 {
    font-size: 2.3em;
    font-weight: 700;
    margin-bottom: 8px;
    background: linear-gradient(135deg, #fff 0%, #f0f8ff 50%, #e6f3ff 100%);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
    text-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);
    letter-spacing: 1px;
}

.game-subtitle {
    font-size: 1.0em;
    color: rgba(255, 255, 255, 0.8);
    font-weight: 400;
    margin: 0;
    letter-spacing: 0.5px;
}

.game-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 24px;
    font-size: 1.0em;
    font-weight: 600;
    position: relative; /* For hitFeedback positioning */
}

.score-section {
    display: flex;
    gap: 18px;
}

.score, .combo, .lives, .level {
    background: rgba(255, 255, 255, 0.15);
    padding: 10px 16px;
    border-radius: 10px;
    backdrop-filter: blur(10px);
    border: 1px solid rgba(255, 255, 255, 0.2);
    box-shadow: var(--shadow-light);
    font-weight: 500;
}

.level {
    background-color: rgba(100, 200, 255, 0.2); /* Light blue tint for level */
}

#lives-display {
    color: #ff6b94;
    font-size: 1.3em;
    text-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);
}

.hit-feedback {
    position: absolute;
    left: 50%;
    transform: translateX(-50%);
    top: -5px; /* Position it slightly above the score line */
    font-size: 1.4em;
    font-weight: bold;
    text-shadow: 2px 2px 4px rgba(0,0,0,0.5);
    opacity: 0;
    transition: opacity 0.5s ease-out, transform 0.5s ease-out;
    pointer-events: none;
}

.hit-feedback.show {
    opacity: 1;
    transform: translateX(-50%) translateY(-10px) scale(1.1);
}
.hit-feedback.perfect { color: var(--hit-color-perfect); }
.hit-feedback.great { color: var(--hit-color-great); }
.hit-feedback.good { color: var(--hit-color-good); }
.hit-feedback.miss { color: var(--miss-color); }


.game-area {
    position: relative;
    height: 400px; /* Slightly reduced height */
    background: rgba(0, 0, 0, 0.25);
    border-radius: 18px;
    margin-bottom: 24px;
    overflow: hidden;
    border: 2px solid rgba(255, 255, 255, 0.2);
    box-shadow: inset 0 4px 8px rgba(0, 0, 0, 0.2), var(--shadow-medium);
}

.falling-notes {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
}

.hit-zone {
    position: absolute;
    bottom: 45px; /* Align with hit-line related calculations */
    left: 0;
    right: 0;
    height: 20px; /* Visible height of the zone */
    background: rgba(0, 188, 212, 0.2); /* Semi-transparent cyan */
    z-index: 0;
    border-top: 1px dashed rgba(0, 188, 212, 0.5);
    border-bottom: 1px dashed rgba(0, 188, 212, 0.5);
}

.hit-line {
    position: absolute;
    bottom: 50px; /* Position from the bottom of game-area, center of hit-zone */
    left: 0;
    right: 0;
    height: 4px;
    background-color: #00BCD4; /* Bright Cyan */
    box-shadow: 0 0 10px #00BCD4, 0 0 15px #00BCD4; /* Glow effect */
    z-index: 1; /* Above falling notes, but below hit-zone visual if needed */
}

.falling-bar {
    position: absolute;
    border: 1px solid #2980b9;
    box-sizing: border-box;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 14px;
    color: white;
    text-shadow: 1px 1px 2px rgba(0,0,0,0.7);
    border-radius: 4px;
    transition: background-color 0.1s ease, border 0.1s ease, opacity 0.2s ease, transform 0.1s ease;
}

.falling-bar.perfect { background-color: var(--hit-color-perfect); border-color: #fff; color: #111;}
.falling-bar.great   { background-color: var(--hit-color-great); border-color: #fff; color: #111;}
.falling-bar.good    { background-color: var(--hit-color-good); border-color: #fff; color: #fff;}
.falling-bar.miss    { background-color: var(--miss-color); opacity: 0.6; transform: scale(0.9) rotate(-5deg); }

.falling-bar.hit-flash {
    animation: hit-flash-animation 0.3s ease-out;
}

@keyframes hit-flash-animation {
    0% { box-shadow: 0 0 8px rgba(255,255,255,0.7), 0 0 12px rgba(255,255,255,0.5); transform: scale(1.05); }
    50% { box-shadow: 0 0 18px rgba(255,255,255,1), 0 0 30px rgba(255,255,100,0.8); transform: scale(1.15); }
    100% { box-shadow: 0 0 8px rgba(255,255,255,0.7), 0 0 12px rgba(255,255,255,0.5); transform: scale(1.05); }
}


/* Keyboard styles */
.keyboard-container {
    margin-bottom: 24px;
    padding: 15px;
    background: rgba(0, 0, 0, 0.2);
    border-radius: 15px;
    backdrop-filter: blur(5px);
}

.keyboard {
    position: relative;
    height: 140px;
    background: linear-gradient(135deg, #2c2c2c, #1a1a1a);
    border-radius: 12px;
    padding: 15px;
    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.4), inset 0 2px 4px rgba(255, 255, 255, 0.1);
    overflow: visible; /* Allow keys to pop out slightly */
    display: flex; /* Center the white-keys container */
    justify-content: center; /* Center the white-keys container */
}

.white-keys {
    display: flex;
    position: relative; /* For black keys positioning context */
    z-index: 1;
}

.black-keys {
    position: absolute;
    top: 15px; /* Same as keyboard padding */
    left: 0; /* Relative to white-keys container now */
    height: 70px;
    z-index: 2;
    pointer-events: none;
    /* Width will be determined by the white keys it sits on */
}

.key {
    cursor: pointer;
    transition: all 0.1s cubic-bezier(0.4, 0, 0.2, 1);
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: flex-end; /* Push label to bottom */
    user-select: none;
    position: relative;
    padding-bottom: 8px; /* Space for label */
}

.white-key {
    width: var(--key-width-desktop);
    height: 110px;
    background: linear-gradient(to bottom, #ffffff 0%, #f8f8f8 50%, #e8e8e8 100%);
    border: 1px solid #b0b0b0;
    border-bottom-width: 3px;
    border-radius: 0 0 6px 6px;
    margin: 0 1px;
    color: #333;
    box-shadow: 0 3px 5px rgba(0, 0, 0, 0.1), inset 0 1px 1px rgba(255, 255, 255, 0.8);
}

.black-key {
    position: absolute; /* Positioned by JS or specific CSS rules */
    width: var(--black-key-width-desktop);
    height: 70px;
    background: linear-gradient(to bottom, #4a4a4a 0%, #2c2c2c 50%, #1a1a1a 100%);
    border: 1px solid #000;
    border-bottom-width: 3px;
    border-radius: 0 0 5px 5px;
    color: white;
    font-size: 0.8em;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.3), inset 0 1px 1px rgba(255, 255, 255, 0.2);
    pointer-events: auto; /* Make black keys clickable */
}

/* Black key positioning relative to the start of the white keys container */
.black-key[data-position="0"]  { left: calc(var(--key-width-desktop) * 1 - var(--black-key-width-desktop) / 2 - 1px); } /* C#3 (between C3-D3) */
.black-key[data-position="1"]  { left: calc(var(--key-width-desktop) * 2 - var(--black-key-width-desktop) / 2 - 1px); } /* D#3 */
.black-key[data-position="3"]  { left: calc(var(--key-width-desktop) * 4 - var(--black-key-width-desktop) / 2 - 1px); } /* F#3 */
.black-key[data-position="4"]  { left: calc(var(--key-width-desktop) * 5 - var(--black-key-width-desktop) / 2 - 1px); } /* G#3 */
.black-key[data-position="5"]  { left: calc(var(--key-width-desktop) * 6 - var(--black-key-width-desktop) / 2 - 1px); } /* A#3 */
.black-key[data-position="7"]  { left: calc(var(--key-width-desktop) * 8 - var(--black-key-width-desktop) / 2 - 1px); } /* C#4 */
.black-key[data-position="8"]  { left: calc(var(--key-width-desktop) * 9 - var(--black-key-width-desktop) / 2 - 1px); } /* D#4 */
.black-key[data-position="10"] { left: calc(var(--key-width-desktop) * 11 - var(--black-key-width-desktop) / 2 - 1px); } /* F#4 */
.black-key[data-position="11"] { left: calc(var(--key-width-desktop) * 12 - var(--black-key-width-desktop) / 2 - 1px); } /* G#4 */
.black-key[data-position="12"] { left: calc(var(--key-width-desktop) * 13 - var(--black-key-width-desktop) / 2 - 1px); } /* A#4 */


.key-label {
    font-size: 0.85em;
    font-weight: bold;
    position: absolute;
    bottom: 5px;
    left: 50%;
    transform: translateX(-50%);
}
.black-key .key-label {
    font-size: 0.75em;
}

.computer-key-hint {
    position: absolute;
    top: 5px;
    left: 50%;
    transform: translateX(-50%);
    font-size: 0.7em;
    font-weight: bold;
    color: #555;
    background-color: rgba(255,255,255,0.3);
    padding: 1px 3px;
    border-radius: 2px;
}
.black-key .computer-key-hint {
    color: #ccc;
    background-color: rgba(0,0,0,0.3);
}


.key:hover {
    filter: brightness(1.1);
}

.key.active {
    transform: translateY(2px) scale(0.98);
}
.white-key.active {
    background: linear-gradient(to bottom, #e0e0e0 0%, #d0d0d0 50%, #c0c0c0 100%);
    box-shadow: 0 1px 2px rgba(0,0,0,0.2), inset 0 1px 2px rgba(0,0,0,0.1);
}
.black-key.active {
    background: linear-gradient(to bottom, #3a3a3a 0%, #1c1c1c 50%, #0a0a0a 100%);
    box-shadow: 0 2px 3px rgba(0,0,0,0.5), inset 0 1px 2px rgba(0,0,0,0.2);
}

.key.feedback-perfect { animation: feedbackKeyPerfect 0.4s ease-out; }
.key.feedback-great { animation: feedbackKeyGreat 0.4s ease-out; }
.key.feedback-good { animation: feedbackKeyGood 0.4s ease-out; }
.key.feedback-wrong { animation: feedbackKeyWrong 0.5s ease-out; }

@keyframes feedbackKeyPerfect {
  0%, 100% { transform: scale(1); }
  50% { transform: scale(1.05); box-shadow: 0 0 15px var(--hit-color-perfect), inset 0 0 5px var(--hit-color-perfect); background-color: var(--hit-color-perfect); }
}
@keyframes feedbackKeyGreat {
  0%, 100% { transform: scale(1); }
  50% { transform: scale(1.03); box-shadow: 0 0 12px var(--hit-color-great), inset 0 0 4px var(--hit-color-great); background-color: var(--hit-color-great); }
}
@keyframes feedbackKeyGood {
  0%, 100% { transform: scale(1); }
  50% { transform: scale(1.02); box-shadow: 0 0 10px var(--hit-color-good), inset 0 0 3px var(--hit-color-good); background-color: var(--hit-color-good); }
}
@keyframes feedbackKeyWrong {
  0%, 100% { transform: scale(1); }
  25%, 75% { transform: translateX(-3px) rotate(-2deg); }
  50% { transform: translateX(3px) rotate(2deg); background-color: var(--miss-color); }
}

.key.scale-active { /* Highlight keys in the current practice scale */
    /* Use a subtle border or background change */
    border-left: 3px solid var(--hit-color-good);
    border-right: 3px solid var(--hit-color-good);
}
.black-key.scale-active {
    border-left: 2px solid var(--hit-color-good);
    border-right: 2px solid var(--hit-color-good);
    /* Or change background gradient slightly */
}


/* Controls styles */
.controls {
    display: flex;
    gap: 12px;
    justify-content: center;
    margin-bottom: 20px;
    flex-wrap: wrap;
    align-items: center;
}

.btn {
    padding: 12px 24px;
    border: none;
    border-radius: 10px;
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    color: white;
    font-size: 0.9em;
    font-weight: 600;
    cursor: pointer;
    transition: all 0.25s cubic-bezier(0.4, 0, 0.2, 1);
    box-shadow: var(--shadow-medium), 0 1px 2px rgba(0,0,0,0.1);
    border: 1px solid rgba(255, 255, 255, 0.2);
    letter-spacing: 0.5px;
    text-transform: uppercase;
}

.game-modes { display: flex; gap: 8px; margin: 0 8px; }
.mode-btn { background: linear-gradient(135deg, #5a68a5 0%, #6a5f90 100%); }
.mode-btn.active-mode {
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    box-shadow: 0 0 12px rgba(102, 126, 234, 0.4), inset 0 1px 2px rgba(255, 255, 255, 0.2);
    transform: translateY(-1px);
}

.scale-selection {
    display: flex; align-items: center; gap: 6px; margin: 0 8px;
    padding: 8px 10px; background: rgba(255,255,255,0.1); border-radius: 8px;
}
.scale-selection label { font-size: 0.85em; font-weight: 500; color: var(--text-secondary); }
.control-select {
    padding: 7px 10px; border-radius: 6px; border: 1px solid var(--glass-border);
    background: var(--glass-bg); color: var(--text-primary); font-size: 0.85em;
    outline: none; cursor: pointer; transition: border-color 0.2s ease, box-shadow 0.2s ease;
}
.control-select:hover { border-color: rgba(255,255,255,0.5); box-shadow: 0 0 5px rgba(255,255,255,0.2); }
.control-select option { background: #333; color: white; }

.btn:hover:not(:disabled) {
    transform: translateY(-2px);
    box-shadow: var(--shadow-heavy), 0 2px 4px rgba(0,0,0,0.15);
    background: linear-gradient(135deg, #7c8cfc 0%, #8a5fc4 100%);
}
.btn:active:not(:disabled) { transform: translateY(0px); box-shadow: var(--shadow-light); }
.btn:disabled { opacity: 0.5; cursor: not-allowed; transform: none; box-shadow: 0 1px 2px rgba(0,0,0,0.1); }

.status {
    text-align: center; font-size: 1.0em; font-weight: 500; padding: 15px;
    background: rgba(255,255,255,0.12); border-radius: 10px; backdrop-filter: blur(10px);
    border: 1px solid rgba(255,255,255,0.2); box-shadow: var(--shadow-light); line-height: 1.3;
}

.volume-control {
    display: flex; align-items: center; gap: 10px; padding: 10px 15px;
    background: rgba(255,255,255,0.12); border-radius: 10px; backdrop-filter: blur(10px);
    border: 1px solid rgba(255,255,255,0.2); box-shadow: var(--shadow-light);
}
.volume-control label { font-size: 12px; font-weight: 600; min-width: 55px; text-transform: uppercase; letter-spacing: 0.5px; }
#volumeSlider {
    flex: 1; max-width: 150px; height: 5px; background: rgba(255,255,255,0.2);
    border-radius: 3px; outline: none; -webkit-appearance: none; appearance: none; cursor: pointer;
}
#volumeSlider::-webkit-slider-thumb {
    -webkit-appearance: none; appearance: none; width: 16px; height: 16px;
    background: linear-gradient(135deg, #4CAF50, #45a049); border-radius: 50%;
    cursor: pointer; border: 2px solid #fff; box-shadow: var(--shadow-light); transition: all 0.2s ease;
}
#volumeSlider::-webkit-slider-thumb:hover { transform: scale(1.1); box-shadow: var(--shadow-medium); }
#volumeValue { font-size: 12px; font-weight: 700; min-width: 38px; text-align: center; color: #4CAF50; text-shadow: 0 1px 2px rgba(0,0,0,0.3); }

.instructions {
    display: grid; grid-template-columns: 1fr 1fr; gap: 20px; margin-bottom: 24px; padding: 20px;
    background: rgba(255,255,255,0.08); border-radius: 16px; backdrop-filter: blur(10px);
    border: 1px solid rgba(255,255,255,0.15);
}
.instruction-group h3 { font-size: 1.0em; font-weight: 600; margin-bottom: 10px; color: rgba(255,255,255,0.95); display: flex; align-items: center; gap: 8px; }
.instruction-group ul { list-style: none; padding: 0; margin: 0; }
.instruction-group li { padding: 5px 0; color: rgba(255,255,255,0.8); font-size: 0.85em; line-height: 1.4; position: relative; padding-left: 16px; }
.instruction-group li::before { content: '♪'; position: absolute; left: 0; color: #4CAF50; font-weight: bold; }
.highlight { color: #4CAF50; font-weight: 600; text-shadow: 0 0 4px rgba(76,175,80,0.3); }
.key-mapping { display: flex; flex-direction: column; gap: 6px; }
.key-mapping div { color: rgba(255,255,255,0.8); font-size: 0.85em; }
.key-hint { font-family: 'Courier New', monospace; background: rgba(255,255,255,0.15); padding: 3px 6px; border-radius: 5px; font-weight: 600; letter-spacing: 0.5px; color: #fff; }


@media (max-width: 900px) { /* Tablet and smaller */
    .game-header { flex-direction: column; gap: 12px; align-items: center; text-align: center; }
    .score-section { gap: 10px; flex-wrap: wrap; justify-content: center; }
    .hit-feedback { position: static; transform: none; margin-top: 8px; }
    .controls { flex-direction: column; } /* Stack controls vertically */
    .game-modes, .scale-selection, .volume-control { width: 100%; justify-content: center; }
    .instructions { grid-template-columns: 1fr; gap: 18px; padding: 18px; }
}


@media (max-width: 768px) { /* Mobile specific overrides */
    .game-container { padding: 15px; margin: 10px; }
    .game-title h1 { font-size: 1.8em; }
    .game-subtitle { font-size: 0.9em; }
    
    .score, .combo, .lives, .level { padding: 8px 12px; font-size: 0.85em; }
    .game-area { height: 330px; }
    .hit-zone { bottom: 35px; height: 15px;}
    .hit-line { bottom: 40px; }

    .keyboard-container { padding: 10px; }
    .keyboard { 
        height: 120px; /* Adjust height for smaller keys */
        padding: 10px; 
        /* overflow-x: auto; /* Allow horizontal scrolling if keyboard too wide */
        /* white-space: nowrap; /* Prevent white keys from wrapping */
    }
    /* No transform: scale() on .keyboard directly to avoid double scaling */

    .white-key {
        width: var(--key-width-mobile);
        height: 95px;
        margin: 0 0.5px; /* Slightly reduce margin */
    }
    .black-key {
        width: var(--black-key-width-mobile);
        height: 60px;
    }
    .key-label { font-size: 0.7em; bottom: 4px;}
    .black-key .key-label { font-size: 0.6em; }
    .computer-key-hint { font-size: 0.6em; top: 3px; }

    /* Recalculate black key positions for mobile key widths */
    .black-key[data-position="0"]  { left: calc(var(--key-width-mobile) * 1 - var(--black-key-width-mobile) / 2 - 0.5px); }
    .black-key[data-position="1"]  { left: calc(var(--key-width-mobile) * 2 - var(--black-key-width-mobile) / 2 - 0.5px); }
    .black-key[data-position="3"]  { left: calc(var(--key-width-mobile) * 4 - var(--black-key-width-mobile) / 2 - 0.5px); }
    .black-key[data-position="4"]  { left: calc(var(--key-width-mobile) * 5 - var(--black-key-width-mobile) / 2 - 0.5px); }
    .black-key[data-position="5"]  { left: calc(var(--key-width-mobile) * 6 - var(--black-key-width-mobile) / 2 - 0.5px); }
    .black-key[data-position="7"]  { left: calc(var(--key-width-mobile) * 8 - var(--black-key-width-mobile) / 2 - 0.5px); }
    .black-key[data-position="8"]  { left: calc(var(--key-width-mobile) * 9 - var(--black-key-width-mobile) / 2 - 0.5px); }
    .black-key[data-position="10"] { left: calc(var(--key-width-mobile) * 11 - var(--black-key-width-mobile) / 2 - 0.5px); }
    .black-key[data-position="11"] { left: calc(var(--key-width-mobile) * 12 - var(--black-key-width-mobile) / 2 - 0.5px); }
    .black-key[data-position="12"] { left: calc(var(--key-width-mobile) * 13 - var(--black-key-width-mobile) / 2 - 0.5px); }

    .btn { padding: 10px 18px; font-size: 0.8em; }
    .instruction-group h3 { font-size: 0.9em; }
    .instruction-group li { font-size: 0.8em; }
    .key-hint { padding: 2px 4px; font-size: 0.8em;}
}


/* Particle effects */
.particle {
    position: absolute;
    width: 8px; /* Smaller particles */
    height: 8px;
    background: radial-gradient(circle, #FFD700 0%, #FFA500 70%, #FF8C00 100%);
    border-radius: 50%;
    pointer-events: none;
    animation: particle 1s cubic-bezier(0.25, 0.46, 0.45, 0.94) forwards;
    box-shadow: 0 0 6px rgba(255,215,0,0.5), 0 0 3px rgba(255,215,0,0.3);
    z-index: 10; /* Ensure particles are above notes */
}
@keyframes particle {
    0% { opacity: 1; transform: scale(1) translate(0,0); }
    100% { opacity: 0; transform: scale(0.3) translate(var(--dx), var(--dy)); }
}

.keyboard-container::before, .game-container::before { /* Simplified pseudo-elements */
    content: ''; position: absolute; top: -1px; left: -1px; right: -1px; bottom: -1px;
    border-radius: inherit; /* Inherit from parent */
    z-index: -1;
}
.keyboard-container::before { background: linear-gradient(45deg, rgba(255,255,255,0.08) 0%, rgba(255,255,255,0.04) 50%, rgba(255,255,255,0.08) 100%); opacity: 0.6; }
.game-container::before { background: linear-gradient(135deg, rgba(102,126,234,0.25) 0%, rgba(118,75,162,0.25) 50%, rgba(107,115,255,0.25) 100%); filter: blur(1.5px); }